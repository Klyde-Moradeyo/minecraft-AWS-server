# Doc: https://developer.hashicorp.com/terraform/tutorials/automation/github-actions
name: CI/CD Infra handler

on:
  push:
    branches:
      - main
      - test
    paths:
      - "terraform/infrastructure_handler/**"
      - "lambda_function/**"
      - "fargate_task/**"
env:
  TF_CLOUD_ORGANIZATION: "mango-dev"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "minecraft-infra-handler"
  CONFIG_DIRECTORY: "./terraform/infrastructure_handler"
  GIT_TAG_PREFIX: "MCI" # MCI means Minecraft Infrastructure Coordinator

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      lambda: ${{ steps.filter.outputs.lambda }}
      terraform: ${{ steps.filter.outputs.terraform }}
      fargate: ${{ steps.filter.outputs.fargate }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            lambda:
              - 'lambda_function/**'
            terraform:
              - 'terraform/infrastructure_handler/**'
            fargate:
              - 'fargate_task/**'

  ci-lambda:
    uses: ./.github/workflows/reusable-ci-lambda_func.yml
    needs: filter
    if: needs.filter.outputs.lambda == 'true'
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}

  ci-fargate:
    uses: ./.github/workflows/reusable-ci-fargate-task.yml
    needs: filter
    if: needs.filter.outputs.fargate == 'true'
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}
      aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      tf_api_token: ${{ secrets.TF_API_TOKEN }}

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: [ ci-fargate, ci-lambda ]
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
      - name: Download lambda function payload
        uses: actions/download-artifact@v2
        with:
          name: lambda-artifact
          path: ${{ env.TF_WORKSPACE }}
      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
