# Doc: https://developer.hashicorp.com/terraform/tutorials/automation/github-actions
name: CI/CD Infra handler

on:
  push:
    branches:
      - main
      - dev
    paths:
      - "terraform/infrastructure_handler/**"
      - "lambda_function/**"
env:
  TF_CLOUD_ORGANIZATION: "mango-dev"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "minecraft-infra-handler"
  CONFIG_DIRECTORY: "./terraform/infrastructure_handler"
  GIT_TAG_PREFIX: "MCI" # MCI means Minecraft Infrastructure Coordinator

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      lambda: ${{ steps.filter.outputs.lambda }}
      terraform: ${{ steps.filter.outputs.terraform }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            lambda:
              - 'lambda_function/**'
            terraform:
              - 'terraform/infrastructure_handler/**'
  set-env-vars:
    runs-on: ubuntu-latest
    steps:  
      - name: Set Env Vars 
        id: set-env
        run: |
          ##### DEVELOPMENT ENVIRONMENT #####
          if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            TERRAFORM_WORKSPACE="dev-minecraft-infra"

          ##### PRODUCTION ENVIRONMENT #####
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            TERRAFORM_WORKSPACE="prod-minecraft-infra"
            INFRA_HANDLER_DIR="./terraform/prod/infrastructure_handler"
          fi

          echo "TF_WORKSPACE=$TERRAFORM_WORKSPACE" >> $GITHUB_ENV

  ci-lambda:
    uses: Klyde-Moradeyo/minecraft-AWS-server/.github/workflows/reusable-ci-lambda_func.yml@github_workflows
    needs: filter
    with:
      filter: ${{ needs.filter.outputs.lambda }}
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}

  cd-terraform-apply:
    needs: [ ci-lambda ]
    uses: Klyde-Moradeyo/minecraft-AWS-server/.github/workflows/reusable-cd-terraform-apply.yml@github_workflows
    with:
      tf_workspace: ${{ env.TERRAFORM_WORKSPACE }}
      tf_cloud_org: ${{ env.TF_CLOUD_ORGANIZATION }}
      config_dir: ${{ env.CONFIG_DIRECTORY }}
      filter: ${{ needs.filter.outputs.terraform }}
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}
      tf_api_token: ${{ secrets.TF_API_TOKEN }}
