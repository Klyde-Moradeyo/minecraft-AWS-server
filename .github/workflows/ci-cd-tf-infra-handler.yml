# Doc: https://developer.hashicorp.com/terraform/tutorials/automation/github-actions
name: CI/CD Infra handler + lambda

on:
  push:
    branches:
      - main
      - dev
    paths:
      - "terraform/dev/infrastructure_handler/**"
      - "terraform/prod/infrastructure_handler/**"
      - "lambda_function/**"
      - ".github/workflows/ci-cd-tf-infra-handler.yml"

jobs:
  set-env-vars:
    runs-on: ubuntu-latest
    outputs:
      tf_workspace: ${{ steps.set-env.outputs.tf_workspace }}
      config_directory: ${{ steps.set-env.outputs.config_directory }}
      git_tag_prefix: ${{ steps.set-env.outputs.git_tag_prefix }}
      tf_cloud_org: ${{ steps.set-env.outputs.tf_cloud_org }}
    steps:
    - name: Set Env Vars 
      id: set-env
      run: |
        ##### DEVELOPMENT ENVIRONMENT #####
        if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          TERRAFORM_WORKSPACE="dev-minecraft-infra-handler"
          INFRA_HANDLER_DIR="./terraform/dev/infrastructure_handler"
  
        ##### PRODUCTION ENVIRONMENT #####
        elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
          TERRAFORM_WORKSPACE="prod-minecraft-infra-handler"
          INFRA_HANDLER_DIR="./terraform/prod/infrastructure_handler"
          
        fi

        GIT_TAG_PREFIX="MSIH"  # MSIH means Minecraft Server Infrastructure Handler
        TF_CLOUD_ORG="mango-dev"
  
        echo "tf_workspace=$TERRAFORM_WORKSPACE" >> "$GITHUB_OUTPUT"
        echo "config_directory=$INFRA_HANDLER_DIR" >> "$GITHUB_OUTPUT"
        echo "git_tag_prefix=$GIT_TAG_PREFIX" >> "$GITHUB_OUTPUT"
        echo "tf_cloud_org=$TF_CLOUD_ORG" >> "$GITHUB_OUTPUT"

  filter:
    runs-on: ubuntu-latest
    needs: [ set-env-vars ] 
    outputs:
      lambda: ${{ steps.filter.outputs.lambda }}
      terraform: ${{ steps.filter.outputs.terraform }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            lambda:
              - 'lambda_function/**'
            terraform:
              - '${{ needs.set-env-vars.outputs.config_directory }}/**'

  ci-lambda:
    uses: Klyde-Moradeyo/minecraft-AWS-server/.github/workflows/reusable-ci-lambda_func.yml@github-workflows
    needs: [ filter, set-env-vars ]   
    with:
      filter: ${{ needs.filter.outputs.lambda }}
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}

  cd-terraform-apply:
    needs: [ ci-lambda, set-env-vars ]
    uses: Klyde-Moradeyo/minecraft-AWS-server/.github/workflows/reusable-cd-terraform-apply.yml@github-workflows
    with:
      tf_workspace: ${{ needs.set-env-vars.outputs.tf_workspace }}
      tf_cloud_org: ${{ needs.set-env-vars.outputs.tf_cloud_org }}
      config_dir: ${{ needs.set-env-vars.outputs.config_directory }}
      filter: ${{ needs.filter.outputs.terraform }}
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}
      tf_api_token: ${{ secrets.TF_API_TOKEN }}

  git-tag:
    uses: Klyde-Moradeyo/minecraft-AWS-server/.github/workflows/reusable-git-tag.yml@github-workflows
    needs: [ cd-terraform-apply, set-env-vars ]
    with:
      git_tag_prefix: ${{ needs.set-env-vars.outputs.git_tag_prefix }}
    secrets:
      gh_pat_token: ${{ secrets.GH_PAT }}