name: Reusable CI Lambda Function

on:
  workflow_call:
    secrets:
      gh_pat_token:
        required: true
      aws_id:
        required: true
      aws_key:
        required: true

env:
    AWS_REGION: "eu-west-2"
    IMAGE_NAME: "mc_infra_runner_img"
    IMAGE_TAG: "latest"
    GIT_TAG_PREFIX: "TEC" # TEC means Terraform Execution Container 

jobs:
    build-fargate:
        name: "Build fargate task"
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
            token: ${{ secrets.GH_PAT }}
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
          with:
            aws-access-key-id: ${{ secrets.aws_id }}
            aws-secret-access-key: ${{ secrets.aws_key }}
            aws-region: ${{ env.AWS_REGION }}
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.4.4
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        - name: Set Env Vars
          working-directory: ./terraform/minecraft_infrastructure
          run: |
            echo "ECR_REPO_URL=$(terraform output ecr_repository_url)" >> $GITHUB_ENV
        - name: Build Fargate Image
          working-directory: ./fargate_task
          run: |
            docker build -t ${{ env.IMAGE_NAME }}  .
            docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
        - name: Push Fargate Image
          working-directory: ./fargate_task
          run: |
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO_URL }}
            docker push ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
        - name: Tag Git
          run: |
            latest_tag=$(git tag | grep '^${{ env.GIT_TAG_PREFIX }}_' | sort -t. -k1,1n -k2,2n -k3,3n | tail -n1)
            if [[ -z "$latest_tag" ]]; then
              echo "No tags found starting with ${{ env.GIT_TAG_PREFIX }}_"
              exit 1
            fi
    
            # Remove the prefix from the tag
            version_string=${latest_tag#${{ env.GIT_TAG_PREFIX }}_}
    
            # Split the version string into an array
            version=(${version_string//./ })
    
            # Increment patch version
            version[2]=$((version[2] + 1))
    
            # Construct new tag
            FARGATE_TAG="${{ env.GIT_TAG_PREFIX }}_${version[0]}.${version[1]}.${version[2]}"
    
            echo "New tag is $FARGATE_TAG"
    
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git tag "${{ env.GIT_TAG_PREFIX }}"
            git push https://dark-mango-bot:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git --tags
    
            build-fargate:
              name: "Build fargate task"
              runs-on: ubuntu-latest
              steps:
              - name: Checkout code
                uses: actions/checkout@v3
                with:
                  fetch-depth: 0
                  token: ${{ secrets.GH_PAT }}
              - name: Setup Terraform
                uses: hashicorp/setup-terraform@v2
                with:
                  terraform_version: 1.4.4
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
              - name: Set Env Vars
                working-directory: ./terraform/minecraft_infrastructure
                run: |
                  echo "ECR_REPO_URL=$(terraform output ecr_repository_url)" >> $GITHUB_ENV
              - name: Build Fargate Image
                working-directory: ./fargate_task
                run: |
                  docker build -t ${{ env.IMAGE_NAME }}  .
                  docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
              - name: Push Fargate Image
                working-directory: ./fargate_task
                run: |
                  aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO_URL }}
                  docker push ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
              - name: Tag Git
                run: |
                  latest_tag=$(git tag | grep '^${{ env.GIT_TAG_PREFIX }}_' | sort -t. -k1,1n -k2,2n -k3,3n | tail -n1)
                  if [[ -z "$latest_tag" ]]; then
                    echo "No tags found starting with ${{ env.GIT_TAG_PREFIX }}_"
                    exit 1
                  fi
          
                  # Remove the prefix from the tag
                  version_string=${latest_tag#${{ env.GIT_TAG_PREFIX }}_}
          
                  # Split the version string into an array
                  version=(${version_string//./ })
          
                  # Increment patch version
                  version[2]=$((version[2] + 1))
          
                  # Construct new tag
                  FARGATE_TAG="${{ env.GIT_TAG_PREFIX }}_${version[0]}.${version[1]}.${version[2]}"
          
                  echo "New tag is $FARGATE_TAG"
          
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git tag "${{ env.GIT_TAG_PREFIX }}"
                  git push https://dark-mango-bot:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git --tags
    